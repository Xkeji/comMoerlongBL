<?php
//-------------------------------声明-------------------------------------------
// <auto-generated>
//     此文件是自动生成的文件，对这个文件的任何修改在下次自动生成的时候都会丢失。
//     模板名称：{{StateMachine}}Action.php.tt
//     生成日期：2019-03-19 16:10:41
// </auto-generated>
//------------------------------------------------------------------------------
namespace comMoerlongBL\agreement\stateMachines;

use comMoerlongBL\core\stateMachines\StateMachineException;
use comMoerlongBL\agreement\enums\EnumOnlineAgreementFileState;

/**
 * 线上协议归档状态机
 * 
 * 线上协议归档状态机
 */
class OnlineAgreementFileStateAction
{
		
	/**
     * @Notes 创建
     * @Interface 协议归档，同时设置线上协议和纸质协议归档标识为T
     *
     * @param $entity 归档
     *
     * @return entity
     * @throws StateMachineException
     */
	public static function pAgreementFiled(IOnlineAgreementFileState $entity)
	{       
		if ($entity->getOnlineAgreementFileState() != EnumOnlineAgreementFileState::apply) {
            throw new StateMachineException(
                sprintf(
                    "当前状态必须是 %d: %s 时才可使用。",                    
                    EnumOnlineAgreementFileState::apply,
                    EnumOnlineAgreementFileState::getDescription(EnumOnlineAgreementFileState::apply)                    
                )
            );
        }
		
            
		$entity->setOnlineAgreementFileState(EnumOnlineAgreementFileState::filed);
        return $entity;
    }
		
	/**
     * @Notes 创建
     * @Interface 已归档协议发生变更，需要重新绑定或修改线上协议条款。
     *
     * @param $entity 变更
     *
     * @return entity
     * @throws StateMachineException
     */
	public static function pChange(IOnlineAgreementFileState $entity)
	{       
		if ($entity->getOnlineAgreementFileState() != EnumOnlineAgreementFileState::filed) {
            throw new StateMachineException(
                sprintf(
                    "当前状态必须是 %d: %s 时才可使用。",                    
                    EnumOnlineAgreementFileState::filed,
                    EnumOnlineAgreementFileState::getDescription(EnumOnlineAgreementFileState::filed)                    
                )
            );
        }
		
            
		$entity->setOnlineAgreementFileState(EnumOnlineAgreementFileState::changed);
        return $entity;
    }
		
	/**
     * @Notes 创建
     * @Interface 《协议》【扫码绑定】重新绑定和修改线上协议
     *
     * @param $entity 重新扫描绑定
     *
     * @return entity
     * @throws StateMachineException
     */
	public static function pRescanBinding(IOnlineAgreementFileState $entity)
	{       
		if ($entity->getOnlineAgreementFileState() != EnumOnlineAgreementFileState::changed) {
            throw new StateMachineException(
                sprintf(
                    "当前状态必须是 %d: %s 时才可使用。",                    
                    EnumOnlineAgreementFileState::changed,
                    EnumOnlineAgreementFileState::getDescription(EnumOnlineAgreementFileState::changed)                    
                )
            );
        }
		
            
		$entity->setOnlineAgreementFileState(EnumOnlineAgreementFileState::apply);
        return $entity;
    }
		
	/**
     * @Notes 创建
     * @Interface 通过扫描纸质协议，绑定线上协议
     *
     * @param $entity 扫描绑定
     *
     * @return entity
     * @throws StateMachineException
     */
	public static function pScanBinding(IOnlineAgreementFileState $entity)
	{       
		if (!empty($entity->getOnlineAgreementFileState())) {
            throw new StateMachineException("当前状态必须是 未设置 时才可使用。");
        }
            
		$entity->setOnlineAgreementFileState(EnumOnlineAgreementFileState::apply);
        return $entity;
    }
   
}
